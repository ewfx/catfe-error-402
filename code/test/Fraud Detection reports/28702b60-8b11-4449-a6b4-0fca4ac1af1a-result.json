{"name": "Create a new transaction with valid data", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction with')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction with')\n\n"}, "steps": [{"name": "Given a transaction with", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction with')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction with')\n\n"}, "attachments": [{"name": ".table", "source": "cdfd3e51-42a1-45b1-a6e2-e478b3d3160a-attachment.csv", "type": "text/csv"}], "start": 1742998405206, "stop": 1742998405206}, {"name": "When I send a POST request to \"/api/fraud-detection/\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@when(u'I send a POST request to \"/api/fraud-detection/\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: When I send a POST request to \"/api/fraud-detection/\"')\n\n"}, "start": 1742998405206, "stop": 1742998405206}, {"name": "Then the response status code should be 200", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response status code should be 200')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response status code should be 200')\n\n"}, "start": 1742998405206, "stop": 1742998405206}, {"name": "And the response should contain \"message\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"message\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"message\"')\n\n"}, "start": 1742998405206, "stop": 1742998405206}, {"name": "And the response should contain \"transaction_id\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"transaction_id\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"transaction_id\"')\n\n"}, "start": 1742998405206, "stop": 1742998405206}, {"name": "And the response should contain \"fraud_score\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"fraud_score\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"fraud_score\"')\n\n"}, "start": 1742998405206, "stop": 1742998405206}, {"name": "And the response should contain \"fraud_status\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"fraud_status\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"fraud_status\"')\n\n"}, "start": 1742998405206, "stop": 1742998405206}, {"name": "And the response should contain \"alerts\"", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"alerts\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"alerts\"')\n\n"}, "start": 1742998405206, "stop": 1742998405206}], "start": 1742998405206, "stop": 1742998405206, "uuid": "6f11a712-892c-4aa2-98e5-b7808ec8fe44", "historyId": "4f0919a900abd6404cd83f2b2d921ab9", "fullName": "Fraud Detection API: Create a new transaction with valid data", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Fraud Detection API"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}