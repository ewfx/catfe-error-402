{"name": "Get Transaction by ID with Valid Input", "status": "failed", "statusDetails": {"message": "AssertionError: Failed to create transaction: {\"message\":\"Transaction ID '555' already exists\"}\n", "trace": "  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"bdd/Fraud Detection/features/steps/Fraud Detection_steps.py\", line 27, in create_transaction\n    assert response.status_code == 201, f\"Failed to create transaction: {response.text}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Given a transaction exists with ID \"555\"", "status": "failed", "statusDetails": {"message": "AssertionError: Failed to create transaction: {\"message\":\"Transaction ID '555' already exists\"}\n", "trace": "  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"bdd/Fraud Detection/features/steps/Fraud Detection_steps.py\", line 27, in create_transaction\n    assert response.status_code == 201, f\"Failed to create transaction: {response.text}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1742976583715, "stop": 1742976583734}, {"name": "When I send a GET request to \"/api/fraud-detection/555\"", "status": "skipped", "start": 1742976583735, "stop": 1742976583735}, {"name": "Then the response status should be 200", "status": "skipped", "start": 1742976583735, "stop": 1742976583735}, {"name": "And the response should contain \"transaction_id\", \"user_id\", \"amount\", \"currency\", \"location\", \"merchant_id\", \"timestamp\", \"ip_address\", \"fraud_status\", \"fraud_score\", and \"alerts\"", "status": "skipped", "start": 1742976583735, "stop": 1742976583735}, {"name": "And the fraud status should be \"Fraudulent\"", "status": "skipped", "start": 1742976583735, "stop": 1742976583735}, {"name": "And the fraud score should be greater than 70", "status": "skipped", "start": 1742976583735, "stop": 1742976583735}], "start": 1742976583714, "stop": 1742976583735, "uuid": "904357d4-8314-4baf-96c5-ba1577cd6550", "historyId": "aa0086872b383bf0856f426b7fcbb7cb", "fullName": "Fraud Detection API: Get Transaction by ID with Valid Input", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Fraud Detection API"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}