{"name": "Get a Transaction by ID with Valid Data", "status": "failed", "statusDetails": {"message": "AssertionError: Expected fraud_status Fraudulent, but got Legitimate\n", "trace": "  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"bdd/Fraud Detection/features/steps/Fraud Detection_steps.py\", line 39, in step_impl\n    assert response_json.get(\"fraud_status\") == \"Fraudulent\", f\"Expected fraud_status Fraudulent, but got {response_json.get('fraud_status')}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Given a transaction with", "status": "passed", "attachments": [{"name": ".table", "source": "77daac9a-900d-44ba-b8bd-808f483eb86b-attachment.csv", "type": "text/csv"}], "start": 1743001460319, "stop": 1743001460320}, {"name": "When I send a GET request to \"/api/fraud-detection/555\"", "status": "passed", "start": 1743001460320, "stop": 1743001460347}, {"name": "Then the response status code should be 200", "status": "passed", "start": 1743001460347, "stop": 1743001460347}, {"name": "And the response body should contain \"transaction_id\" with value \"555\"", "status": "passed", "start": 1743001460348, "stop": 1743001460348}, {"name": "And the response body should contain \"fraud_status\" with value \"Fraudulent\"", "status": "failed", "statusDetails": {"message": "AssertionError: Expected fraud_status Fraudulent, but got Legitimate\n", "trace": "  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"bdd/Fraud Detection/features/steps/Fraud Detection_steps.py\", line 39, in step_impl\n    assert response_json.get(\"fraud_status\") == \"Fraudulent\", f\"Expected fraud_status Fraudulent, but got {response_json.get('fraud_status')}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1743001460348, "stop": 1743001460348}, {"name": "And the response body should contain \"fraud_score\" with value greater than 50", "status": "skipped", "start": 1743001460349, "stop": 1743001460349}, {"name": "And the response body should contain \"alerts\" with at least one alert", "status": "skipped", "start": 1743001460349, "stop": 1743001460349}], "start": 1743001460319, "stop": 1743001460349, "uuid": "6377c0fb-9b58-4f20-a587-e0532a3f8884", "historyId": "3dbdcda932191034ac9bd489edaaa998", "fullName": "Fraud Detection API: Get a Transaction by ID with Valid Data", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Fraud Detection API"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}