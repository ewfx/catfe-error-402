{"name": "Get a transaction by ID with valid data", "status": "failed", "statusDetails": {"message": "AssertionError: Expected user_id user123, got test_user\n", "trace": "  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"bdd/Fraud Detection/features/steps/Fraud Detection_steps.py\", line 49, in step_impl\n    assert response_json.get(\"user_id\") == \"user123\", f\"Expected user_id user123, got {response_json.get('user_id')}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Given a transaction exists with ID \"555\"", "status": "passed", "start": 1743000469467, "stop": 1743000469486}, {"name": "When I send a GET request to \"/api/fraud-detection/555\"", "status": "passed", "start": 1743000469486, "stop": 1743000469499}, {"name": "Then the response status code should be 200", "status": "passed", "start": 1743000469499, "stop": 1743000469499}, {"name": "And the response body should contain \"transaction_id\" with value \"555\"", "status": "passed", "start": 1743000469499, "stop": 1743000469499}, {"name": "And the response body should contain \"user_id\" with value \"user123\"", "status": "failed", "statusDetails": {"message": "AssertionError: Expected user_id user123, got test_user\n", "trace": "  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"bdd/Fraud Detection/features/steps/Fraud Detection_steps.py\", line 49, in step_impl\n    assert response_json.get(\"user_id\") == \"user123\", f\"Expected user_id user123, got {response_json.get('user_id')}\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1743000469499, "stop": 1743000469500}, {"name": "And the response body should contain \"amount\" with value 60000.0", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}, {"name": "And the response body should contain \"currency\" with value \"INR\"", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}, {"name": "And the response body should contain \"location\" with value \"Mumbai\"", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}, {"name": "And the response body should contain \"merchant_id\" with value \"merchantABC\"", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}, {"name": "And the response body should contain \"timestamp\" with value \"2025-03-23T10:00:00\"", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}, {"name": "And the response body should contain \"ip_address\" with value \"192.168.1.10\"", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}, {"name": "And the response body should contain \"fraud_status\" with value \"Legitimate\"", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}, {"name": "And the response body should contain \"fraud_score\" with value less than 50", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}, {"name": "And the response body should contain \"alerts\" with at least one alert", "status": "skipped", "start": 1743000469500, "stop": 1743000469500}], "start": 1743000469467, "stop": 1743000469500, "uuid": "c5a4fda6-f471-4dd5-b3e2-a3269298e2d0", "historyId": "0db81021ac1222eab1244764d90c275f", "fullName": "Fraud Detection API: Get a transaction by ID with valid data", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Fraud Detection API"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}