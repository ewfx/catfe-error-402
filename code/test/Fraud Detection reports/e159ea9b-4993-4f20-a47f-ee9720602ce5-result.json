{"name": "Create a transaction with invalid data", "status": "failed", "statusDetails": {"message": "AssertionError: Expected message 'Invalid transaction data', but got 'Transaction ID '555' already exists'\n", "trace": "  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"bdd/Fraud Detection/features/steps/Fraud Detection_steps.py\", line 39, in step_impl\n    assert response_json[\"message\"] == \"Invalid transaction data\", f\"Expected message 'Invalid transaction data', but got '{response_json['message']}'\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "steps": [{"name": "Given a transaction with", "status": "passed", "attachments": [{"name": ".table", "source": "faf4ea5c-f528-44d1-8426-e71bf989c270-attachment.csv", "type": "text/csv"}], "start": 1743000451551, "stop": 1743000451552}, {"name": "When I send a POST request to \"/api/fraud-detection/\"", "status": "passed", "start": 1743000451552, "stop": 1743000451570}, {"name": "Then the response status code should be 400", "status": "passed", "start": 1743000451570, "stop": 1743000451570}, {"name": "And the response body should contain \"message\" with value \"Invalid transaction data\"", "status": "failed", "statusDetails": {"message": "AssertionError: Expected message 'Invalid transaction data', but got 'Transaction ID '555' already exists'\n", "trace": "  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/model.py\", line 1329, in run\n    match.run(runner.context)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"/Users/apatni/error-402/Vembed/lib/python3.13/site-packages/behave/matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n    ~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"bdd/Fraud Detection/features/steps/Fraud Detection_steps.py\", line 39, in step_impl\n    assert response_json[\"message\"] == \"Invalid transaction data\", f\"Expected message 'Invalid transaction data', but got '{response_json['message']}'\"\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1743000451571, "stop": 1743000451571}], "start": 1743000451551, "stop": 1743000451572, "uuid": "b2b1eddc-e58a-41bb-a2aa-ccf53b6edc7b", "historyId": "a998ca7f839460b85a0cc542a7f917fe", "fullName": "Fraud Detection API: Create a transaction with invalid data", "labels": [{"name": "severity", "value": "normal"}, {"name": "feature", "value": "Fraud Detection API"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}