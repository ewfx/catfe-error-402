{"uid":"4b6bac2feb7cdf8","name":"Delete a transaction with valid data","fullName":"Fraud Detection API: Delete a transaction with valid data","historyId":"544d4dec1159a000cc0f20aedaa66188","time":{"start":1742998424342,"stop":1742998424342,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction exists with ID \"555\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction exists with ID \"555\"')\n\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction exists with ID \"555\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction exists with ID \"555\"')\n\n","steps":[{"name":"Given a transaction exists with ID \"555\"","time":{"start":1742998424342,"stop":1742998424342,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction exists with ID \"555\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction exists with ID \"555\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"When I send a DELETE request to \"/api/fraud-detection/555\"","time":{"start":1742998424342,"stop":1742998424342,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@when(u'I send a DELETE request to \"/api/fraud-detection/555\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: When I send a DELETE request to \"/api/fraud-detection/555\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"Then the response status code should be 200","time":{"start":1742998424342,"stop":1742998424342,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response status code should be 200')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response status code should be 200')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"And the response should contain \"message\"","time":{"start":1742998424342,"stop":1742998424342,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"message\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"message\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Fraud Detection API"},{"name":"framework","value":"behave"},{"name":"language","value":"cpython3"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"4b6bac2feb7cdf8.json","parameterValues":[]}