{"uid":"669391a7166033b4","name":"Create a new transaction with valid data","fullName":"Fraud Detection API: Create a new transaction with valid data","historyId":"4f0919a900abd6404cd83f2b2d921ab9","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction with')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction with')\n\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction with')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction with')\n\n","steps":[{"name":"Given a transaction with","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction with')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction with')\n\n","steps":[],"attachments":[{"uid":"8ce6a32e08b9601e","name":".table","source":"8ce6a32e08b9601e.csv","type":"text/csv","size":157}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"When I send a POST request to \"/api/fraud-detection/\"","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@when(u'I send a POST request to \"/api/fraud-detection/\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: When I send a POST request to \"/api/fraud-detection/\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"Then the response status code should be 200","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response status code should be 200')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response status code should be 200')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"And the response should contain \"message\"","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"message\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"message\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"And the response should contain \"transaction_id\"","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"transaction_id\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"transaction_id\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"And the response should contain \"fraud_score\"","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"fraud_score\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"fraud_score\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"And the response should contain \"fraud_status\"","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"fraud_status\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"fraud_status\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"And the response should contain \"alerts\"","time":{"start":1742998405206,"stop":1742998405206,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response should contain \"alerts\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response should contain \"alerts\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"attachmentStep":false,"stepsCount":8,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Fraud Detection API"},{"name":"framework","value":"behave"},{"name":"language","value":"cpython3"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"669391a7166033b4.json","parameterValues":[]}