{"uid":"fb824e0ba7f1de78","name":"Delete a transaction with invalid data","fullName":"Fraud Detection API: Delete a transaction with invalid data","historyId":"ab50db0d6adc58dab71e4c0e54f276a2","time":{"start":1743000504027,"stop":1743000504027,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction with ID \"does not exist\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction with ID \"does not exist\"')\n\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction with ID \"does not exist\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction with ID \"does not exist\"')\n\n","steps":[{"name":"Given a transaction with ID \"does not exist\"","time":{"start":1743000504027,"stop":1743000504027,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction with ID \"does not exist\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction with ID \"does not exist\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"When I send a DELETE request to \"/api/fraud-detection/does not exist\"","time":{"start":1743000504027,"stop":1743000504027,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@when(u'I send a DELETE request to \"/api/fraud-detection/does not exist\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: When I send a DELETE request to \"/api/fraud-detection/does not exist\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"Then the response status code should be 404","time":{"start":1743000504027,"stop":1743000504027,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response status code should be 404')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response status code should be 404')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"And the response body should contain \"message\" with value \"Transaction not found\"","time":{"start":1743000504027,"stop":1743000504027,"duration":0},"status":"broken","statusMessage":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'the response body should contain \"message\" with value \"Transaction not found\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then the response body should contain \"message\" with value \"Transaction not found\"')\n\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"severity","value":"normal"},{"name":"feature","value":"Fraud Detection API"},{"name":"framework","value":"behave"},{"name":"language","value":"cpython3"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9d49bfb665b000fa","status":"broken","statusDetails":"\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'a transaction does not exist with ID \"666\"')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given a transaction does not exist with ID \"666\"')\n\n","time":{"start":1742998425705,"stop":1742998425705,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"fb824e0ba7f1de78.json","parameterValues":[]}